[project]
name            = "images-upload-cli"
description     = "Upload images via APIs"
readme          = "README.md"
license         = "MIT"
authors         = [{ name = "deadnews", email = "deadnewsgit@gmail.com" }]
keywords        = ["cli", "imgur", "image-upload", "upload-images", "upload-pictures"]
classifiers     = ["Environment :: Console", "Operating System :: OS Independent"]
dynamic         = ["version"]
requires-python = ">=3.10"

dependencies = [
  "click>=8.1.7",
  "httpx>=0.28.0",
  "loguru>=0.7.2",
  "pillow>=11.0.0",
  "pyperclip>=1.9.0",
  "python-dotenv>=1.0.1",
  "rich>=14.0.0",
]

[dependency-groups]
dev = [
  "mypy>=1.15.0",
  "pyright>=1.1.398",
  "ruff>=0.11.4",
  "pytest>=8.3.5",
  "pytest-asyncio>=0.26.0",
  "pytest-cov>=6.1.0",
  "pytest-httpx>=0.35.0",
  "pytest-mock>=3.14.0",
  "logot>=1.3.0",
  "mkdocs>=1.6.1",
  "mkdocs-click>=0.8.1",
  "mkdocs-gen-files>=0.5.0",
  "mkdocs-literate-nav>=0.6.2",
  "mkdocs-material>=9.6.11",
  "mkdocstrings>=0.29.1",
  "mkdocstrings-python>=1.16.10",
  "nuitka>=2.6.9; platform_system == 'Windows'",
]

[project.scripts]
images-upload-cli = "images_upload_cli._cli:cli"
imgup             = "images_upload_cli._cli:cli"

[project.urls]
Repository    = "https://github.com/deadnews/images-upload-cli"
Changelog     = "https://github.com/deadnews/images-upload-cli/CHANGELOG.md"
Documentation = "https://deadnews.github.io/images-upload-cli"

[build-system]
requires      = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
vcs   = "git"
style = "semver"

[tool.ruff]
line-length        = 99
format.line-ending = "lf"

[tool.ruff.lint]
flake8-tidy-imports.ban-relative-imports = "all"
pycodestyle.max-doc-length               = 129
pycodestyle.max-line-length              = 129
pydocstyle.convention                    = "google"

select = ["ALL"]
ignore = [
  "COM812",  # Trailing comma missing
  "FBT001",  # Boolean positional arg in function definition
  "FBT002",  # Boolean default value in function definition
  "ISC001",  # Checks for implicitly concatenated strings on a single line
  "PLR0913", # Too many arguments to function call
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*"     = ["ANN", "D", "E501", "PLC1901", "PLR2004", "S"]

[tool.pytest.ini_options]
addopts                            = "--verbose --cov=./src --cov-report=term --cov-report=xml"
asyncio_default_fixture_loop_scope = "function"
testpaths                          = ["tests"]
markers                            = ["online: Run tests that require internet connection"]

[tool.coverage.report]
exclude_lines = [
  "# pragma: no cover",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.mypy]
disallow_untyped_defs  = true
follow_imports         = "normal"
ignore_missing_imports = true
show_column_numbers    = true
show_error_codes       = true
warn_unused_ignores    = true

[[tool.mypy.overrides]]
module                = ["tests.*"]
disallow_untyped_defs = false

[tool.pyright]
include          = ["src"]
ignore           = ["tests"]
typeCheckingMode = "standard"
